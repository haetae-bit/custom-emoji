---
import Layout from "../layouts/Layout.astro";
import EmojiForm from "../component/EmojiForm.astro";
import EmojiList from "../component/EmojiList.astro";
import "open-props/masks/edges";

const loggedInUser = Astro.locals.loggedInUser;
---
<Layout>
	<header>
		<span class="welcome">
			{loggedInUser ? `Welcome ${loggedInUser.handle}!` : "Log in"}
		</span>
		{loggedInUser ? (
			<form action="/oauth/logout" method="post" class="login">
				<button>Logout</button>
			</form>
		) : (
			<form action="/oauth/login" method="post" class="login">
				<input type="text" name="atproto-id" autocomplete="username" required />
				<button>Login</button>
			</form>
		)}
	</header>

	<main>
		<EmojiList server:defer>
			<div slot="fallback">
				<div id="loader">
					<div class="heart">♥</div>
					<p>Loading...</p>
				</div>
			</div>
		</EmojiList>
		
		{loggedInUser && (
			<hr />
			<h1>Make a new emoji</h1>
			<EmojiForm />
		)}
	</main>
</Layout>

<style>
	main {
		max-width: 80ch;
		margin: calc(var(--size-9) * -1) auto 0;
		padding: var(--size-9) var(--size-4) var(--size-6);
		background-color: var(--surface-100);
	}

	header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		max-inline-size: var(--size-lg);
		margin: 0 auto var(--size-3);
		padding: var(--size-3) var(--size-3) var(--size-7);
		background: var(--dark-bg-gradient);
		background-blend-mode: soft-light;
		mask: var(--mask-edge-scalloped-bottom);

		.welcome {
			font-family: var(--heading-font);
			font-size: 2rem;
			color: white;
		}

		.login {
			display: flex;
			gap: var(--size-2);

			button {
				position: relative;
				top: 2px;
			}
		}
	}

	hr {
		margin: var(--size-8) auto var(--size-6);
		color: color-mix(in oklch shorter hue, var(--accent) 75%, var(--text));
		height: auto;
		border: none;
		text-align: center;

		&:after {
			display: inline-block;
			content: "★";
			text-shadow:
				-4em 0,
				-2em 0,
				2em 0,
				4em 0;
		}
	}

	#loader {
		display: grid;
		place-content: center;

		.heart {
			color: var(--secondary);
			font-size: calc(var(--font-size-1) * 4);
			animation: var(--animation-pulse);
			max-width: max-content;
			margin-inline: auto;

			@supports (background-clip: text) {
				color: transparent;
				background: var(--dark-bg-gradient);
				background-blend-mode: soft-light;
				background-clip: text;
			}
		}
	}
</style>